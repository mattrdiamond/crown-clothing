{"ast":null,"code":"var _jsxFileName = \"/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStartAsync, fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => component = {\n        CollectionPageContainer\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","fetchCollectionsStart","ShopPage","Component","componentDidMount","render","match","isCollectionsLoaded","props","path","component","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SACEC,0BADF,EAEEC,qBAFF,QAGO,+BAHP;;AAKA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,0BAA0B;AAC3B;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKC,KAA5C;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEX,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAED,KAAK,IAAKE,SAAS,GAAG;AAAEX,QAAAA;AAAF,OAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAcD;;AArBoC;;AAwBvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,0BAA0B,EAAE,MAAMY,QAAQ,CAACZ,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport {\n  fetchCollectionsStartAsync,\n  fetchCollectionsStart\n} from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        {/* in this case, match.path will be /shop */}\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (component = { CollectionPageContainer })}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
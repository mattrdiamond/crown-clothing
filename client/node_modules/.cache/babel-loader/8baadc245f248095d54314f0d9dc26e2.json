{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // if collections exists, turn collection object into array of keys, then map over them to return array of collections\n// if null (collections initial state), return an empty version of collections []\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // select collection matching the collection url parameter (i.e. hats). If collections doesn't exist (not yet loaded), return null\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC,C,CAKP;AACA;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IACTA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHjB,CAAlD,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAsBC,WAAW,IAC7CA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\n// if collections exists, turn collection object into array of keys, then map over them to return array of collections\n// if null (collections initial state), return an empty version of collections []\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\n// select collection matching the collection url parameter (i.e. hats). If collections doesn't exist (not yet loaded), return null\nexport const selectCollection = collectionUrlParam =>\n  createSelector([selectCollections], collections =>\n    collections ? collections[collectionUrlParam] : null\n  );\n"]},"metadata":{},"sourceType":"module"}
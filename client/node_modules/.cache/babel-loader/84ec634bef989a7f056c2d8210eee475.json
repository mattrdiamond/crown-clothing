{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\"; //database\n\nimport \"firebase/auth\"; //authentication\n\nconst config = {\n  apiKey: \"AIzaSyAKQUl3X_MsB--NC2mmBv1QDlkYedesjyM\",\n  authDomain: \"e-commerce-9e6dc.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-9e6dc.firebaseio.com\",\n  projectId: \"e-commerce-9e6dc\",\n  storageBucket: \"e-commerce-9e6dc.appspot.com\",\n  messagingSenderId: \"215401701740\",\n  appId: \"1:215401701740:web:1c4078516bb4ba942f5349\",\n  measurementId: \"G-45QGGVYL1N\"\n}; // take user auth object that we got back from auth library and store in database\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // 1. only save to db if we get back a userAuth object (sign-in) because it is null when signed out\n  if (!userAuth) return; // 2. query firestore to see if object exists\n  // a queryReference object is an object that represents current place in db - get them by calling firestore.doc('users/:userId) or firestore.collections('/users');\n  // it does not have the acutal data. It instead has properties that include details about it, or the method to get the Snapshot object which gives us the data we're looking for\n\n  const userRef = firestore.doc(\"users/123323ww\"); // fictional user\n  // .get pulls a snapshot object of that location in db. can use snapshot to see if there's any data there\n\n  const snapShot = await userRef.get();\n  console.log(\"snapshot\", snapShot);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth(); // we imported firebase/auth above which gives us access to .auth() method on firebase. Export for anything we need related to authentication\n\nexport const firestore = firebase.firestore(); // set up google authentication utility\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // gives us access to googleAuthProvider class from auth library\n// triggers google popup when we use googleAuthProvider for authentication and sign-in\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n}); // signInWithPopup contains popups for several services (sign in with twitter, facebook etc). We just want google\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // export firebase as default in case we want entire library\n\nexport default firebase;","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","snapShot","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP,C,CAA6B;;AAC7B,OAAO,eAAP,C,CAAwB;;AAExB,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,kCAFC;AAGbC,EAAAA,WAAW,EAAE,yCAHA;AAIbC,EAAAA,SAAS,EAAE,kBAJE;AAKbC,EAAAA,aAAa,EAAE,8BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAWA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AACA,MAAI,CAACD,QAAL,EAAe,OAF4D,CAI3E;AAEA;AACA;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAc,gBAAd,CAAhB,CAR2E,CAQ1B;AAEjD;;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACD,CAdM;AAgBPhB,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb,C,CAA8B;;AACrC,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB,C,CAAyD;AACzD;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B,C,CACP;;AACA,eAAetB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\"; //database\nimport \"firebase/auth\"; //authentication\n\nconst config = {\n  apiKey: \"AIzaSyAKQUl3X_MsB--NC2mmBv1QDlkYedesjyM\",\n  authDomain: \"e-commerce-9e6dc.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-9e6dc.firebaseio.com\",\n  projectId: \"e-commerce-9e6dc\",\n  storageBucket: \"e-commerce-9e6dc.appspot.com\",\n  messagingSenderId: \"215401701740\",\n  appId: \"1:215401701740:web:1c4078516bb4ba942f5349\",\n  measurementId: \"G-45QGGVYL1N\"\n};\n\n// take user auth object that we got back from auth library and store in database\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // 1. only save to db if we get back a userAuth object (sign-in) because it is null when signed out\n  if (!userAuth) return;\n\n  // 2. query firestore to see if object exists\n\n  // a queryReference object is an object that represents current place in db - get them by calling firestore.doc('users/:userId) or firestore.collections('/users');\n  // it does not have the acutal data. It instead has properties that include details about it, or the method to get the Snapshot object which gives us the data we're looking for\n  const userRef = firestore.doc(\"users/123323ww\"); // fictional user\n\n  // .get pulls a snapshot object of that location in db. can use snapshot to see if there's any data there\n  const snapShot = await userRef.get();\n\n  console.log(\"snapshot\", snapShot);\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth(); // we imported firebase/auth above which gives us access to .auth() method on firebase. Export for anything we need related to authentication\nexport const firestore = firebase.firestore();\n\n// set up google authentication utility\nconst provider = new firebase.auth.GoogleAuthProvider(); // gives us access to googleAuthProvider class from auth library\n// triggers google popup when we use googleAuthProvider for authentication and sign-in\nprovider.setCustomParameters({ prompt: \"select_account\" });\n// signInWithPopup contains popups for several services (sign in with twitter, facebook etc). We just want google\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n// export firebase as default in case we want entire library\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}
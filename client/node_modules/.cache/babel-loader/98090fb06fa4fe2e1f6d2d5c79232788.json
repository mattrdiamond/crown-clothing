{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\"; // Container pattern - component gets wrapped in multiple layers of wrapped components (HOCs)\n// We can use redux compose to make nested HOCs more readable - evaluates from right to left:\n// 1. withSpinner wraps around collections overview, resulting in a higher order component\n// 2. Then pass HOC into connect which gives it the isLoading prop from mapStateToProps\n\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","createStructuredSelector","compose","selectIsCollectionFetching","WithSpinner","CollectionsOverview","CollectionsOverviewContainer","mapStateToProps","isLoading"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC,C,CAEA;AAEA;AACA;AACA;;AAEA,MAAMC,4BAA4B,GAAGJ,OAAO,CAC1CF,OAAO,CAACO,eAAD,CADmC,EAE1CH,WAF0C,CAAP,CAGnCC,mBAHmC,CAArC;AAKA,MAAME,eAAe,GAAGN,wBAAwB,CAAC;AAC/CO,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAIA,eAAeG,4BAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\n// Container pattern - component gets wrapped in multiple layers of wrapped components (HOCs)\n\n// We can use redux compose to make nested HOCs more readable - evaluates from right to left:\n// 1. withSpinner wraps around collections overview, resulting in a higher order component\n// 2. Then pass HOC into connect which gives it the isLoading prop from mapStateToProps\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nexport default CollectionsOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}
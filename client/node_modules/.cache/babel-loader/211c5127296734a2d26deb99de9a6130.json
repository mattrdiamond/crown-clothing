{"ast":null,"code":"var _jsxFileName = \"/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth } from \"./firebase/firebase.utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    // open subscription between app and firebase - firebase lets us know when authentication state (user object) has changed - without having to fetch to see if state has changed\n    // user = user authenticated object from firebase - persists when refreshing page. Firebase keeps track of all instances of app that are open and knows if we are still signed in\n    // auth.onAuthStateChanged returns a function that when called will close the script subscription\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    // close subscription to firebase to prevent memory leaks from open connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/App.js"],"names":["React","Switch","Route","HomePage","ShopPage","Header","SignInAndSignUp","auth","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","user","setState","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;AACA,SAASC,IAAT,QAAqB,2BAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,mBARc,GAQQ,IARR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA,SAAKH,mBAAL,GAA2BJ,IAAI,CAACQ,kBAAL,CAAwBC,IAAI,IAAI;AACzD,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEG;AAAf,OAAd;AACD,KAF0B,CAA3B;AAGD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKP,mBAAL;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEV,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AApC+B;;AAuClC,eAAeE,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth } from \"./firebase/firebase.utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // open subscription between app and firebase - firebase lets us know when authentication state (user object) has changed - without having to fetch to see if state has changed\n    // user = user authenticated object from firebase - persists when refreshing page. Firebase keeps track of all instances of app that are open and knows if we are still signed in\n    // auth.onAuthStateChanged returns a function that when called will close the script subscription\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({ currentUser: user });\n    });\n  }\n\n  componentWillUnmount() {\n    // close subscription to firebase to prevent memory leaks from open connection\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUp} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
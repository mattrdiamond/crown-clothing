{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [logger, sagaMiddleware]; // spread all middlewares into applyMiddleware function as individual arguments\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart); // persistStore allows browser to cache store using localStorage\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACL,MAAD,EAASI,cAAT,CAApB,C,CAEA;;AACA,OAAO,MAAME,KAAK,GAAGT,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACG,GAAf,CAAmBL,qBAAnB,E,CAEA;;AACA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [logger, sagaMiddleware];\n\n// spread all middlewares into applyMiddleware function as individual arguments\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(fetchCollectionsStart);\n\n// persistStore allows browser to cache store using localStorage\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}
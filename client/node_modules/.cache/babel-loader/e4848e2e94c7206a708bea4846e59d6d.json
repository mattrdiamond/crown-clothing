{"ast":null,"code":"var _jsxFileName = \"/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    // onAuthStateChanged is open subscription between app and firebase which lets us know\n    //  when authentication state has changed without having to fetch manually.\n    //  auth.onAuthStateChanged returns a function which when executed will close script subscription.\n    //  @param userAuth: user authenticated object from Auth library, which persists when refreshing page.\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // get userReference from db or create one\n        const userRef = createUserProfileDocument(userAuth);\n        console.log(\"auth\", userRef); // onSnapshot() subscribes to userRef and listens for any changes. Also returns initial state.\n        // snapShot.data() method gives us actual properties on the snapshot object (aka data)\n\n        await userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n          console.log(\"hi\");\n        });\n      } // If user signs out, set currentUser to null\n      else {\n          this.setState({\n            currentUser: userAuth\n          });\n        }\n    });\n  }\n\n  componentWillUnmount() {\n    // Close subscription to firebase to prevent memory leaks from open connection.\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matt_diamond/Documents/Lynda/udacity/_nano/Projects/crown-clothing/src/App.js"],"names":["React","Switch","Route","HomePage","ShopPage","Header","SignInAndSignUp","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","console","log","onSnapshot","snapShot","setState","id","data","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,mBARc,GAQQ,IARR;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AACZ;AACA,cAAMC,OAAO,GAAGV,yBAAyB,CAACS,QAAD,CAAzC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAApB,EAHY,CAKZ;AACA;;AACA,cAAMA,OAAO,CAACG,UAAR,CAAmBC,QAAQ,IAAI;AACnC,eAAKC,QAAL,CAAc;AACZT,YAAAA,WAAW,EAAE;AACXU,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADD,WAAd;AAMAN,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,SATK,CAAN;AAUD,OAjBD,CAkBA;AAlBA,WAmBK;AACH,eAAKG,QAAL,CAAc;AAAET,YAAAA,WAAW,EAAEG;AAAf,WAAd;AACD;AACF,KAvB0B,CAA3B;AAwBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA1D+B;;AA6DlC,eAAeG,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUp from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // onAuthStateChanged is open subscription between app and firebase which lets us know\n    //  when authentication state has changed without having to fetch manually.\n    //  auth.onAuthStateChanged returns a function which when executed will close script subscription.\n    //  @param userAuth: user authenticated object from Auth library, which persists when refreshing page.\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // get userReference from db or create one\n        const userRef = createUserProfileDocument(userAuth);\n        console.log(\"auth\", userRef);\n\n        // onSnapshot() subscribes to userRef and listens for any changes. Also returns initial state.\n        // snapShot.data() method gives us actual properties on the snapshot object (aka data)\n        await userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          console.log(this.state);\n          console.log(\"hi\");\n        });\n      }\n      // If user signs out, set currentUser to null\n      else {\n        this.setState({ currentUser: userAuth });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // Close subscription to firebase to prevent memory leaks from open connection.\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUp} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}